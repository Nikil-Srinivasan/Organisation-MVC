@model DashboardViewModel

<div class="container">
    <div class="row">
        <div class="col-md-3 col-sm-6">
            <div class="counter red">
                <span class="counter-value">@Model.TotalProducts</span>
                <h3>Products</h3>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="counter blue">
                <span class="counter-value">@Model.TotalCustomers</span>
                <h3>Customers</h3>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="counter blue">
                <span class="counter-value">@Model.TotalDepartments</span>
                <h3>Departments</h3>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="counter blue">
                <span class="counter-value">@Model.TotalEmployees</span>
                <h3>Employees</h3>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6 col-sm-6 offset-sm-1">
        <div class="mt-5">
            <canvas class="my-4 h-100 chart-canvas" id="barChart"></canvas>
        </div>
    </div>
    <div class="col-sm-4 offset-sm-1">
        <div class="mt-5">
            <canvas class="my-4 h-100 chart-canvas-pie" id="pieChart"></canvas>
        </div>
    </div>
</div>
<style>
    .chart-canvas {
        height: 300px; /* Adjust the height as needed */
        margin-top: 20px; /* Add the desired margin-top value */
        padding: 10px; /* Add the desired padding value */
        /* Add border styles if needed */
    }

    .chart-canvas-pie {
        height: 20px; /* Adjust the height as needed */
        margin-top: 20px; /* Add the desired margin-top value */
        padding: 10px; /* Add the desired padding value */
        /* Add border styles if needed */
    }

</style>




<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script type="text/javascript">

    var ctx = document.getElementById('barChart').getContext('2d');
    var labels = @Html.Raw(Json.Serialize(Model.Products));
    var data = @Html.Raw(Json.Serialize(Model.TotalRevenues));


    var barChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Revenue in Million',
                data: data,
                backgroundColor: '#0E86D4'
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script type="text/javascript">
    var ctx = document.getElementById('pieChart').getContext('2d');
    var labels = @Html.Raw(Json.Serialize(Model.Products));
    var data = [50, 75, 100];
    var backgroundColors = [];

    // Generate random colors for each dataset
    for (var i = 0; i < labels.length; i++) {
        backgroundColors.push(generateRandomColor());
    }

    var pieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: labels,
            datasets: [{
                data: data,
                backgroundColor: backgroundColors
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20
                    }
                }
            }
        }
    });
    function generateRandomColor() {
        // Generate random RGB values between 0 and 255
        var r = Math.floor(Math.random() * 256);
        var g = Math.floor(Math.random() * 256);
        var b = Math.floor(Math.random() * 256);

        // Create the RGB color string
        var color = 'rgb(' + r + ', ' + g + ', ' + b + ')';

        return color;
    }

</script>
